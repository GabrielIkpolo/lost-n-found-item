// This is your Prisma schema file,

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                        String         @id @default(auto()) @map("_id") @db.ObjectId
  name                      String
  email                     String         @unique
  phone                     String?        @unique
  password                  String // Hashed password for local authentication
  provider                  Provider // Enum: LOCAL, GOOGLE, FACEBOOK
  role                      UserRole       @default(USER) // Enum: USER, ADMIN, SUPER_ADMIN
  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt
  fcmToken                  String? // FCM token for push notifications
  lastFcmUpdate             DateTime? // Last update of FCM token
  emailNotificationsEnabled Boolean        @default(true)
  inAppNotificationsEnabled Boolean        @default(true)
  pushNotificationsEnabled  Boolean        @default(true)
  items                     Item[]         @relation("UserItems")
  claimedItems              Item[]         @relation("ClaimedItems")
  notifications             Notification[]
  auditlogs                 AuditLog[]
}

enum Provider {
  LOCAL
  GOOGLE
  FACEBOOK
}

enum UserRole {
  USER // Regular user
  ADMIN // Can manage items & users
  SUPER_ADMIN // Can delete logs, backup data
}

model Item {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  category     String
  location     String
  imageUrl     String?
  status       ItemStatus @default(LOST) // Enum: LOST, FOUND, CLAIMED, RETURNED
  reportedBy   User       @relation("UserItems", fields: [reportedById], references: [id])
  reportedById String     @db.ObjectId
  claimedBy    User?      @relation("ClaimedItems", fields: [claimedById], references: [id])
  claimedById  String?    @db.ObjectId
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  auditLogs    AuditLog[]
}

enum ItemStatus {
  LOST
  FOUND
  CLAIMED
  RETURNED
}

model Notification {
  id        String           @id @default(auto()) @map("_id") @db.ObjectId
  user      User             @relation(fields: [userId], references: [id])
  userId    String           @db.ObjectId
  message   String
  type      NotificationType // Enum: ITEM_REPORTED, ITEM_CLAIMED, ITEM_UPDATED
  createdAt DateTime         @default(now())
  read      Boolean          @default(false)
}

enum NotificationType {
  ITEM_REPORTED
  ITEM_CLAIMED
  ITEM_UPDATED
}

model AuditLog {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  userId    String      @db.ObjectId
  item      Item?       @relation(fields: [itemId], references: [id])
  itemId    String?     @db.ObjectId
  action    AuditAction // CREATE, CLAIM, UPDATE, DELETE
  timestamp DateTime    @default(now())
  ipAddress String
  userAgent String
}

enum AuditAction {
  CREATE // User reported a lost item
  CLAIM // User claimed a found item
  UPDATE // Status update (e.g., "returned")
  DELETE // Admin removed an item
}
